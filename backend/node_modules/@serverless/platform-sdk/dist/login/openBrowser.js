'use strict';

var _opn = require('opn');

var _opn2 = _interopRequireDefault(_opn);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _isDocker = require('is-docker');

var _isDocker2 = _interopRequireDefault(_isDocker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function displayManualOpenMessage(url, err) {
  // https://github.com/sindresorhus/log-symbols
  console.log('---------------------------');
  var errMsg = err ? `\nError: ${err.message}` : '';
  var msg = `Unable to open browser automatically${errMsg}`;
  console.log(`ðŸ™ˆ  ${_chalk2.default.red(msg)}`);
  console.log(_chalk2.default.green('Please open your browser & open the URL below to login:'));
  console.log(_chalk2.default.yellow(url));
  console.log('---------------------------');
  return false;
} /* eslint-disable no-console */

module.exports = function openBrowser(url) {
  var browser = process.env.BROWSER;
  if (browser === 'none' || (0, _isDocker2.default)()) {
    return displayManualOpenMessage(url);
  }
  if (process.platform === 'darwin' && browser === 'open') {
    browser = undefined;
  }
  var options = { wait: false, app: browser };
  return (0, _opn2.default)(url, options).catch(function (err) {
    return displayManualOpenMessage(url, err);
  });
};
//# sourceMappingURL=openBrowser.js.map