{"version":3,"sources":["../../../lib/interactiveCli/index.js"],"names":["chalk","require","getLoggedInUser","configureDeployProfile","register","setApp","module","exports","ctx","sls","interactiveCli","user","hooks","registerCheck","check","process","stdout","write","run","setAppCheck","service","app","tenant","green","provider","getProvider","bold"],"mappings":"AAAA;;;;;;;;;;;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;iBAC4BA,OAAO,CAAC,0BAAD,C;MAA3BC,e,YAAAA,e;;kBAE2BD,OAAO,CAAC,kBAAD,C;MAAlCE,sB,aAAAA,sB;;AACR,MAAMC,QAAQ,GAAGH,OAAO,CAAC,YAAD,CAAxB;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,WAAD,CAAtB;;AAEAK,MAAM,CAACC,OAAP,GAAiBC,GAAG,IAAI;AACtB,MAAI,CAACA,GAAG,CAACC,GAAJ,CAAQC,cAAb,EAA6B,OAAO,IAAP;AAC7B,QAAMC,IAAI,GAAGT,eAAe,EAA5B;AAEA,QAAMU,KAAK,GAAG;AACZ;AACA,KAAE,GAAED,IAAI,GAAG,QAAH,GAAc,OAAQ,0BAA9B;AAAA,sDAA0D,aAAY;AACpE,cAAME,aAAa,SAAST,QAAQ,CAACU,KAAT,CAAeN,GAAG,CAACC,GAAnB,CAA5B;;AACA,YAAII,aAAJ,EAAmB;AACjBE,UAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,IAArB;AACA,gBAAMb,QAAQ,CAACc,GAAT,CAAaV,GAAG,CAACC,GAAjB,EAAsBI,aAAtB,CAAN;AACD;;AACD,cAAMM,WAAW,SAASd,MAAM,CAACS,KAAP,CAAaN,GAAG,CAACC,GAAjB,CAA1B;;AACA,YAAIU,WAAJ,EAAiB;AACfJ,UAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,IAArB;AACA,gBAAMZ,MAAM,CAACa,GAAP,CAAWV,GAAG,CAACC,GAAf,EAAoBU,WAApB,CAAN;AACD;;AACD,YAAIX,GAAG,CAACC,GAAJ,CAAQW,OAAR,CAAgBC,GAAhB,IAAuBb,GAAG,CAACC,GAAJ,CAAQW,OAAR,CAAgBE,MAA3C,EAAmD;AACjDP,UAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB;EAC5BjB,KAAK,CAACuB,KAAN,CAAY,mEAAZ,CAAiF;CAD3E,EADiD,CAIjD;AACA;;AACA,cAAIZ,IAAJ,EAAU,MAAMR,sBAAsB,mBAAMK,GAAN;AAAWgB,YAAAA,QAAQ,EAAEhB,GAAG,CAACC,GAAJ,CAAQgB,WAAR,CAAoB,KAApB;AAArB,aAA5B;AACX;AACF,OAnBD;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAFY;AAsBZ;AAAA,iDAAsB,aAAY;AAChC,YAAIjB,GAAG,CAACC,GAAJ,CAAQW,OAAR,CAAgBC,GAAhB,IAAuBb,GAAG,CAACC,GAAJ,CAAQW,OAAR,CAAgBE,MAA3C,EAAmD;AACjDP,UAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB;;EAE5BjB,KAAK,CAAC0B,IAAN,CAAW,4DAAX,CAAyE;;;;CAFnE;AAOD;AACF,OAVD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAtBY,GAAd;AAmCA,SAAOd,KAAP;AACD,CAxCD","sourcesContent":["'use strict';\n\nconst chalk = require('chalk');\nconst { getLoggedInUser } = require('@serverless/platform-sdk');\n\nconst { configureDeployProfile } = require('../deployProfile');\nconst register = require('./register');\nconst setApp = require('./set-app');\n\nmodule.exports = ctx => {\n  if (!ctx.sls.interactiveCli) return null;\n  const user = getLoggedInUser();\n\n  const hooks = {\n    // if the user is logged in, go through Dashboard setup before AWS setup\n    [`${user ? 'before' : 'after'}:interactiveCli:setupAws`]: async () => {\n      const registerCheck = await register.check(ctx.sls);\n      if (registerCheck) {\n        process.stdout.write('\\n');\n        await register.run(ctx.sls, registerCheck);\n      }\n      const setAppCheck = await setApp.check(ctx.sls);\n      if (setAppCheck) {\n        process.stdout.write('\\n');\n        await setApp.run(ctx.sls, setAppCheck);\n      }\n      if (ctx.sls.service.app && ctx.sls.service.tenant) {\n        process.stdout.write(`\n${chalk.green('Your project is setup for monitoring, troubleshooting and testing')}\n`);\n        // setup deploy if user already logged in so that AWS creds check in SFO works right\n        // & temporarily add provider to ctx to fetch deploy profile\n        if (user) await configureDeployProfile({ ...ctx, provider: ctx.sls.getProvider('aws') });\n      }\n    },\n    'interactiveCli:end': async () => {\n      if (ctx.sls.service.app && ctx.sls.service.tenant) {\n        process.stdout.write(`\n\n${chalk.bold('Deploy your project and monitor, troubleshoot and test it:')}\n- Run “serverless deploy” to deploy your service.\n- Run “serverless dashboard” to view the dashboard.\n\n`);\n      }\n    },\n  };\n\n  return hooks;\n};\n"],"file":"index.js"}